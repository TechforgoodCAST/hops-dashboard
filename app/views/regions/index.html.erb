<div class="max-w-5xl mx-auto px-4 my-8 flex flex-wrap">
  
  <div class="w-full">
    <%= render partial: 'layouts/notices' %>
  </div>
  <div class="flex-1 mr-3">
    <div class="card">
      <h1><%= pluralize(@hops.count, 'hop') %><br>with <%= pluralize(Person.all.count, 'attendee') %><br>from <%= pluralize(Organisation.all.uniq.count, 'organisation')%></h1>
      <% @hops.includes(:region).order("regions.name desc").sort_by{|h| h.region.order}.group_by(&:region).each do |region, hops| %>
        <h3 class="mt-3"><%= link_to region.name, region_path(region) %> - <%= pluralize(hops.count, 'hop') %></h3>
        <p><%= number_to_percentage(region.organisations.uniq.count.to_f / region.charities.to_f * 100, precision: 1)%> coverage</p>
        <% hops.sort_by{|h| h.date}.reverse.uniq.each do |hop| %>
          <p class="mb-1"><%= link_to hop.name, design_hop_path(hop), class: 'link' %></p>
        <% end %>
      <% end %>
    </div>
  </div>

  <div class="flex-1">
    <div class="card">
      <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.google[:maps_api_key] %>" data-turbolinks-eval="false"></script>
      <script type="text/javascript">
        $(function(){
          var map = googleMap('map', 5);
          
          regions.map(r => r.count = 0);
          
          var hopMarkers = [];
          var regionMarkers = [];

          var hops = <%= @hops.to_json(:include => [:venue, :region]).html_safe %>;
          $.each(hops, function(i, hop){
            let marker = {
              latitude: hop.venue.latitude,
              longitude: hop.venue.longitude,
              infoContent: '<a href="/design_hops/' + hop.id + '" title="' + hop.name + '"><b>' + hop.name + '</b>',
              visible: false
            }

            hopMarkers.push(addMapMarker(marker, map, 'red'));

            regions.find(region => region.name === hop.region.name).count += 1;
          });

          map.data.loadGeoJson('NUTS_Level_1_January_2018_Full_Clipped_Boundaries_in_the_United_Kingdom.json', null, function (features){
            markers = features.map(function(feature) {
              
                let region = regions.find(region => region.name === feature.getProperty('nuts118nm'));
              
                let marker = {
                  latitude: feature.getProperty('lat'),
                  longitude: feature.getProperty('long'),
                  infoContent: '<a href="/regions/' + region.id + '">' + region.name + '</a>',
                  visible: true
                }
                regionMarkers.push(addMapMarker(marker, map, 'blue'+region.count));
            });

          });


          google.maps.event.addListener(map, 'zoom_changed', function() {
              var zoom = map.getZoom();

              // iterate over markers and call setVisible
              for (i = 0; i < hopMarkers.length; i++) {
                  hopMarkers[i].setVisible(zoom > 5);
              }

              for (i = 0; i < regionMarkers.length; i++) {
                  regionMarkers[i].setVisible(zoom <= 5);
              }
          });
        });

      </script>
      <div id="map" style="height:500px; border-radius:10px; letter-spacing: normal;"></div>
    </div>
    <div class="card mt-3">
      <h1>National Stats</h1>
      <p>Aggregated responses for all hops</p>
      <%
      interactions = Interaction.where({action_type: 'maturity'})

      maturities = {
        "Tech is not a priority for us" => 0,
        "We don’t know where to start" => 0,
        "We’re beginning to experiment with tech" => 0,
        "Tech is a strategic priority and progress is happening" => 0,
        "It's embedded into what we do across all areas and our daily practices" => 0
      }
      interactions.each do |interaction|
        if maturities.key?(interaction.action) then maturities[interaction.action]+= 1 end
      end
      %>
      
      <canvas id="org_maturities" width="400" height="150"></canvas>
      <script>
      var ctx = document.getElementById('org_maturities').getContext('2d');
      var myChart = new Chart(ctx, {
          type: 'horizontalBar',
          data: {
              labels: [<%= ('"'+maturities.keys.join('","')+'"').html_safe %>],
              datasets: [{
                  data: [<%= maturities.values.join(",") %>],
                  backgroundColor: '#2daeb7'
              }]
          },
          options: {
              legend: {
                  display: false
              },
              scales: {
                  xAxes: [{
                      ticks: {
                          beginAtZero: true
                      }
                  }]
              }
          }
      });
      </script>

      <%
      orgs = Organisation.all

      incomes = {}
      Organisation.incomes.keys.each do |category|
        incomes[category] = 0
      end

      orgs.each do |org|
         if incomes.key?(org.income) then incomes[org.income]+= 1 end
      end
      %>
      <canvas id="org_incomes" width="400" height="150"></canvas>
      <script>
      var ctx = document.getElementById('org_incomes').getContext('2d');
      var myChart = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: [<%= ('"'+incomes.keys.join('","')+'"').html_safe %>],
              datasets: [{
                  data: [<%= incomes.values.join(",") %>],
                  backgroundColor: '#2daeb7'
              }]
          },
          options: {
              legend: {
                  display: false
              },
              scales: {
                  xAxes: [{
                      scaleLabel : {
                          display: false,
                          labelString: 'Annual Income'
                      },
                  }],
                  yAxes: [{
                      ticks: {
                          beginAtZero: true
                      }
                  }]
              }
          }
      });
      </script>
    </div>
  </div>
</div>